generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Department {
  codeDepartment String           @id
  name           String
  municipalities Municipalities[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Municipalities {
  id             String         @id @default(uuid())
  codeMunicipalities String
  name           String
  departmentId   String
  institutions   Institutions[]

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  Department Department @relation(fields: [departmentId], references: [codeDepartment])

  @@unique([codeMunicipalities, departmentId])
}

model Institutions {
  codeDane         String         @id
  name             String
  address          String
  zona             String
  phone            String
  Guy              String?
  calendar         String?
  state            String
  rector           String
  municipalitiesId String
  headquarters     Headquarters[]

  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  Municipalities Municipalities @relation(fields: [municipalitiesId], references: [id], onDelete: Cascade)
}

model Headquarters {
  codeDane       String @id
  name           String
  address        String
  zona           String
  phone          String
  calendar       String?
  state          String
  rector         String
  institutionsId String

  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  Institutions Institutions @relation(fields: [institutionsId], references: [codeDane], onDelete: Cascade)
}